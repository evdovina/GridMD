******************************************************************************
*  OVERVIEW
******************************************************************************

GridMD is the C++ class library intended to help developers to quickly
build  molecular dynamics or Monte-Carlo simulation programs and to run them
in the distributed environment.

GridMD library is free software. The full licence is available in the file
/gridmd/doc/gridmd_license.txt

Home project web page: http://gridmd.sourceforge.net/


******************************************************************************
*  FILE STRUCTURE
******************************************************************************

/-gridmd                  Main directory for the library source filed
  |-doc                   Documentation and licences
    |-gridmd_license.txt  GridMD library license
    |-wx_license.txt      Supplementary wxWindows library licence
    |-jobmngr_en.pdf      Manual for the Job Manager component
	  |-html                Documentation for the entire GridMD library
  |-include               Main GridMD include files
  |-src                   Main GridMD source files

|-ivutils
  |-include               Additional utility include files
  |-src                   Additional utility source files

|-examples                Sample GridMD applications
  |-pbs_job_manager       Examples for the PBS Job Manager
  |-simple_workflow       Examples for the workflow scenarios

|-wxint                   Headers (interface) to use wxWidgets library

******************************************************************************
*  INSTALLATION
******************************************************************************

The installation is done via CMake.
The dependencies are as folows:
- Boost headers
- EITHER Boost components: filesystem, timer, system, regex OR WxWidgets core library.
  To use WxWidgets core, add -DUSE_WXWIDGETS=ON to CMake arguments
- libxml2 for XML suport (optional, enabled by default, to disable, add -DWITH_XML=OFF)
- libssh(default) or libssh2 (add -DUSE_LIBSSH=OFF -DUSE_LIBSSH2=ON) for SSH support

Instructions (Windows):
Let's assume that you have all dependencies built and installed and the root paths are as folows:
- Boost            C:\devel\boost_1_59_0
To build Boost, type from VS Developer console:
   bootstrap
   .\b2

- libxml2          C:\devel\libxml2-2.7.8.win32
- libssh           C:\devel\libssh-0.7.2




On Linux you might just run CMake after you've satisfied all dependencies using your distro's package manager
